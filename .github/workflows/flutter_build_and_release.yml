name: Flutter Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.build_target.os }}
    strategy:
      matrix:
        build_target:
          - { os: ubuntu-latest, platform: linux }
          - { os: ubuntu-latest, platform: android }
          - { os: windows-latest, platform: windows }

    env:
      PLATFORM: ${{ matrix.build_target.platform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Flutter doctor
        run: flutter doctor

      - name: Install dependencies
        run: flutter pub get

      - name: Install Linux build dependencies
        if: env.PLATFORM == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libgstreamer1.0-dev \
            libgstreamer-plugins-base1.0-dev \
            gstreamer1.0-plugins-good \
            gstreamer1.0-plugins-ugly

      - name: Build Linux
        if: env.PLATFORM == 'linux'
        run: flutter build linux --release
        shell: bash

      - name: Build Android
        if: env.PLATFORM == 'android'
        run: flutter build apk --release

      - name: Build Windows
        if: env.PLATFORM == 'windows'
        run: flutter build windows --release

      - name: Archive Linux build
        if: env.PLATFORM == 'linux'
        run: |
          cd build/linux/x64/release/
          zip -r ../../../linux-release.zip bundle

      - name: Archive Windows build
        if: env.PLATFORM == 'windows'
        run: |
          cd build/windows/x64/runner/Release/
          7z a ../../../../../windows-release.zip *

      - name: Upload Linux artifact
        if: env.PLATFORM == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: linux-release
          path: build/linux-release.zip

      - name: Upload Windows artifact
        if: env.PLATFORM == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: windows-release.zip

      - name: Upload Android artifact
        if: env.PLATFORM == 'android'
        uses: actions/upload-artifact@v4
        with:
          name: android-release
          path: build/app/outputs/flutter-apk/app-release.apk

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Check artifact structure
        run: |
          echo "Listing downloaded artifacts..."
          find artifacts -type f

      - name: Set release name
        id: release_name
        run: echo "name=release-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ steps.release_name.outputs.name }}
          release_name: Release ${{ steps.release_name.outputs.name }}
          draft: false
          prerelease: false

      - name: Upload Linux release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/linux-release/linux-release.zip
          asset_name: linux-release.zip
          asset_content_type: application/zip

      - name: Upload Windows release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/windows-release/windows-release.zip
          asset_name: windows-release.zip
          asset_content_type: application/zip

      - name: Upload Android release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/android-release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
